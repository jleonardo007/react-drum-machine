{"version":3,"sources":["drumPads.js","DrumApp.jsx","index.js"],"names":["drumPads","keyCode","keyTrigger","id","url","activePadStyle","background","boxShadow","fontSize","Pad","props","updateDisplay","padId","drumPad","showId","activePad","setState","padStyle","setTimeout","playSound","padSound","document","getElementById","currentTime","volume","play","handleKeyPress","e","state","addEventListener","this","removeEventListener","pad","className","onClick","style","src","React","Component","DrumMachine","showPadId","displayInput","updateVolume","target","value","Math","floor","currentVolume","alt","map","type","min","max","step","onChange","ReactDOM","render"],"mappings":"sNAyDeA,EAzDE,CACf,CACEC,QAAS,GACTC,WAAY,IACZC,GAAI,WACJC,IAAK,4DAEP,CACEH,QAAS,GACTC,WAAY,IACZC,GAAI,WACJC,IAAK,4DAEP,CACEH,QAAS,GACTC,WAAY,IACZC,GAAI,WACJC,IAAK,4DAEP,CACEH,QAAS,GACTC,WAAY,IACZC,GAAI,WACJC,IAAK,8DAEP,CACEH,QAAS,GACTC,WAAY,IACZC,GAAI,OACJC,IAAK,4DAEP,CACEH,QAAS,GACTC,WAAY,IACZC,GAAI,UACJC,IAAK,0DAEP,CACEH,QAAS,GACTC,WAAY,IACZC,GAAI,cACJC,IAAK,8DAEP,CACEH,QAAS,GACTC,WAAY,IACZC,GAAI,OACJC,IAAK,8DAEP,CACEH,QAAS,GACTC,WAAY,IACZC,GAAI,YACJC,IAAK,2DCjDHC,EAAiB,CACrBC,WAAY,8CACZC,UAAW,OACXC,SAAU,QAGNC,E,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAcRC,cAAgB,WACd,IAAIC,EAAQ,EAAKF,MAAMG,QAAQV,GAC/B,EAAKO,MAAMI,OAAOF,IAjBD,EAoBnBG,UAAY,WACV,EAAKC,SAAS,CACZC,SAAUZ,IAEZa,YAAW,WACT,EAAKF,SAAS,CACZC,SAAU,OAEX,MA5Bc,EA+BnBE,UAAY,WACV,IAAMC,EAAWC,SAASC,eAAe,EAAKZ,MAAMG,QAAQX,YAC5DkB,EAASG,YAAc,EACvBH,EAASI,OAAS,EAAKd,MAAMc,OAC7BJ,EAASK,OACT,EAAKd,gBACL,EAAKI,aArCY,EAwCnBW,eAAiB,SAAAC,GACXA,EAAE1B,UAAY,EAAKS,MAAMG,QAAQZ,SAAS,EAAKkB,aAvCnD,EAAKS,MAAQ,CACXX,SAAU,IAHK,E,iFAQjBI,SAASQ,iBAAiB,UAAWC,KAAKJ,kB,6CAI1CL,SAASU,oBAAoB,UAAWD,KAAKJ,kB,+BAiC7C,IAAMM,EAAMF,KAAKpB,MAAMG,QACvB,OACE,yBACEoB,UAAU,WACV9B,GAAI6B,EAAI7B,GACR+B,QAASJ,KAAKX,UACdgB,MAAOL,KAAKF,MAAMX,UAElB,8BAAOe,EAAI9B,YACX,2BAAO+B,UAAU,OAAO9B,GAAI6B,EAAI9B,WAAYkC,IAAKJ,EAAI5B,W,GAvD3CiC,IAAMC,WAyHTC,E,YA3Db,WAAY7B,GAAQ,IAAD,8BACjB,4CAAMA,KAOR8B,UAAY,SAAArC,GACV,EAAKa,SAAS,CACZyB,aAActC,KAVC,EAcnBuC,aAAe,SAAAf,GACb,EAAKX,SAAS,CACZyB,aACqB,MAAnBd,EAAEgB,OAAOC,MAAT,yBAEeC,KAAKC,MAAuB,IAAjBnB,EAAEgB,OAAOC,QACrCG,cAAepB,EAAEgB,OAAOC,SAlB1B,EAAKhB,MAAQ,CACXa,aAAc,GACdM,cAAe,IAJA,E,sEAwBT,IAAD,OACP,OACE,yBAAK5C,GAAG,gBACN,yBAAKA,GAAG,SACN,yBAAKiC,IAAI,wBAAwBY,IAAK,eACtC,mDAEF,yBAAKf,UAAU,aACZjC,EAASiD,KAAI,SAAApC,GACZ,OACE,kBAAC,EAAD,CACEA,QAASA,EACTC,OAAQ,EAAK0B,UACbhB,OAAQ,EAAKI,MAAMmB,oBAK3B,yBAAKd,UAAU,gBACb,yBAAK9B,GAAG,WACN,gCAAS2B,KAAKF,MAAMa,eAEtB,2BACES,KAAK,QACLC,IAAI,IACJC,IAAI,IACJC,KAAK,OACLC,SAAUxB,KAAKY,qB,GApDDL,IAAMC,W,MClEhCiB,IAASC,OAAO,kBAAC,EAAD,MAAiBnC,SAASC,eAAe,U","file":"static/js/main.709ff3d4.chunk.js","sourcesContent":["const drumPads = [\r\n  {\r\n    keyCode: 81,\r\n    keyTrigger: \"Q\",\r\n    id: \"Heater-1\",\r\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\"\r\n  },\r\n  {\r\n    keyCode: 87,\r\n    keyTrigger: \"W\",\r\n    id: \"Heater-2\",\r\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3\"\r\n  },\r\n  {\r\n    keyCode: 69,\r\n    keyTrigger: \"E\",\r\n    id: \"Heater-3\",\r\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3\"\r\n  },\r\n  {\r\n    keyCode: 65,\r\n    keyTrigger: \"A\",\r\n    id: \"Heater-4\",\r\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3\"\r\n  },\r\n  {\r\n    keyCode: 83,\r\n    keyTrigger: \"S\",\r\n    id: \"Clap\",\r\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3\"\r\n  },\r\n  {\r\n    keyCode: 68,\r\n    keyTrigger: \"D\",\r\n    id: \"Open-HH\",\r\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3\"\r\n  },\r\n  {\r\n    keyCode: 90,\r\n    keyTrigger: \"Z\",\r\n    id: \"Kick-n'-Hat\",\r\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3\"\r\n  },\r\n  {\r\n    keyCode: 88,\r\n    keyTrigger: \"X\",\r\n    id: \"Kick\",\r\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3\"\r\n  },\r\n  {\r\n    keyCode: 67,\r\n    keyTrigger: \"C\",\r\n    id: \"Closed-HH\",\r\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3\"\r\n  }\r\n];\r\n\r\nexport default drumPads;\r\n","import React from \"react\";\r\nimport drumPads from './drumPads';\r\n\r\n\r\nconst activePadStyle = {\r\n  background: \"linear-gradient(to right, #2193b0, #6dd5ed)\",\r\n  boxShadow: \"none\",\r\n  fontSize: \"2rem\"\r\n};\r\n\r\nclass Pad extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      padStyle: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.handleKeyPress);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keydown\", this.handleKeyPress);\r\n  }\r\n\r\n  updateDisplay = () => {\r\n    let padId = this.props.drumPad.id;\r\n    this.props.showId(padId);\r\n  };\r\n\r\n  activePad = () => {\r\n    this.setState({\r\n      padStyle: activePadStyle\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({\r\n        padStyle: {}\r\n      });\r\n    }, 200);\r\n  };\r\n\r\n  playSound = () => {\r\n    const padSound = document.getElementById(this.props.drumPad.keyTrigger);\r\n    padSound.currentTime = 0;\r\n    padSound.volume = this.props.volume;\r\n    padSound.play();\r\n    this.updateDisplay();\r\n    this.activePad();\r\n  };\r\n\r\n  handleKeyPress = e => {\r\n    if (e.keyCode === this.props.drumPad.keyCode) this.playSound();\r\n  };\r\n\r\n  render() {\r\n    const pad = this.props.drumPad;\r\n    return (\r\n      <div\r\n        className=\"drum-pad\"\r\n        id={pad.id}\r\n        onClick={this.playSound}\r\n        style={this.state.padStyle}\r\n      >\r\n        <span>{pad.keyTrigger}</span>\r\n        <audio className=\"clip\" id={pad.keyTrigger} src={pad.url} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass DrumMachine extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      displayInput: \"\",\r\n      currentVolume: 0.5\r\n    };\r\n  }\r\n\r\n  showPadId = id => {\r\n    this.setState({\r\n      displayInput: id\r\n    });\r\n  };\r\n\r\n  updateVolume = e => {\r\n    this.setState({\r\n      displayInput:\r\n        e.target.value === \"0\"\r\n          ? `Mute`\r\n          : `Volume: ${Math.floor(e.target.value * 100)}`,\r\n      currentVolume: e.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"drum-machine\">\r\n        <div id=\"title\">\r\n          <img src=\"https://goo.gl/Umyytc\" alt= \"React-logo\" />\r\n          <h1>React Drum Machine</h1>\r\n        </div>\r\n        <div className=\"drum-pads\">\r\n          {drumPads.map(drumPad => {\r\n            return (\r\n              <Pad\r\n                drumPad={drumPad}\r\n                showId={this.showPadId}\r\n                volume={this.state.currentVolume}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"drum-control\">\r\n          <div id=\"display\">\r\n            <strong>{this.state.displayInput}</strong>\r\n          </div>\r\n          <input\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"1\"\r\n            step=\"0.01\"\r\n            onChange={this.updateVolume}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DrumMachine;\r\n","import React from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport DrumMachine from \"./DrumApp\";\r\nimport './styles/styles.min.css';\r\n\r\nReactDOM.render(<DrumMachine />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}